#First do local box enumeration
	1. uname -a: print out all information about the system such as distro type and version.

	2. ~/.bash_history: If you have read permissions, then look into this file.
	
	3. .bash_profile and .bashrc: contains shell commands that are run when bash is invoked. These files can contain some interesting start up setting that can potentially reveal us some infromation. For example a bash alias can be pointed towards an important file or process.

	4. sudo -V: shows sudo version.
	5. sudo -l: list binaries which can be run with sudo permissions.

	#Check whether /etc/ directory is writable
	1. Read /etc/passwd - for enumeration of user accounts
	2. Read /etc/shadow - If possible - contains hashes for users.
	3. Read /etc/hosts - to enumerate network further.

	#Check cronjobs if there are running any
	>cat /etc/crontab

	#Find command and interesting files
	-> find / -type f -name "" 2>/dev/null
	-> Look for .log, .bak, .conf files and other some important files.

	#SUID
	>find / -type f -perm -u=s 2>/dev/null

	#TCP connections
	>netstat -at | less
	>netstat -tulpn: will provide much nice output with the most-interesting data.
	>ss -tulnp
		ss: socket statistics
		-t: display tcp sockets
		-u: display udp sockets
		-l: display only listening sockets
		-p: shows the process using the socket
		-n: doesnt resolve service names.

	#Automating Scripts
	Linpeas.sh
	LinEnum.sh


-----------------------------------------------------------------------------------
Manual Methods - (From Linux Privilege Escalation from TCM)
	
	Useful Links or Cheatsheets:
		-> https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/
		-> https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Privilege%20Escalation.md
		-> https://book.hacktricks.xyz/linux-unix/privilege-escalation
		-> https://sushant747.gitbooks.io/total-oscp-guide/content/privilege_escalation_-_linux.html
		-> https://github.com/TCM-Couse-Resources/Linux-Privilege-Escalation-Resources

	Initial Enumeration
		-> System Enumeration
			>uname -a : print out information about kernerl version and architecture.
			>cat /proc/version : similar to uname 
			>cat /etc/issue : to look for distribution
			>lscpu : to look for architecture.
				-> Use this command and note down the cores, threads and check with the exploit whether the exploit can run with the number of cores and threads present.
			>ps aux : list down all the processes or services running on the system.
			>ps aux | grep [Username] : lists processes run by specified username.

		-> User Enumeration
			>whoami
			>id
			>sudo -l - privileges user have
			>cat /etc/passwd - list users
			>cat /etc/passwd | cut -d : -f 1 - list just users
			>history - history of commands used by the user.
			>sudo su - : to change to root user.

			-> Look for sensitive files
				>cat /etc/shadow
				>cat /etc/group

			Note: First few things to do: check the architecture, who are you, any sudo permissions, history.

		-> Network Enumeration
			>ifconfig/ip a : ip information
			>route/ip route : routing information
			>arp -a/ip neigh : arp information
			>netstat -ano/ss -tulnp : open sockets and ports.

		-> Password Hunting
			>grep --color=auto -rnw '/' -ie "PASSWORD" --color=always 2> /dev/null
				-> Here the query string PASSWORD can also be PASSWORD=,PASS=,PASS etc to narrow down search.
			>locate password | more
				-> file can be password,pwd,pass,passwd or anything along those lines.
			>find / -name id_rsa/authorized_keys 2>/dev/null 
				-> look if we have permissions to read a ssh key.


	Exploring Automated tools
		-> Always run multiple tools to catch that one little prick from the haystack.
		-> Start with Linpeas and then go to linEnum.
		-> Also run linux exploit suggester if you find kernel vulnerabilities.
		-> If these 3 didnt give you any results, then run linuxprivchecker.py if the target has python installed.
	
	Kernel Exploits
		-> 