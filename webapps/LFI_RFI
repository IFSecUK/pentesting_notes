LFI (Local File Inclusion)

	What is LFI?
		-> LFI (local file inclusion) is a vulnerability which an attacker can exploit to include/read files.
	Why this happens?
		-> LFI occurs when an application uses the path to a file as input. If the application treats this input as trusted, a local file may be used in the include statement.

	Example:
		-> http://vhost.thm/lfi.php?page=home.html
		-> http://vhost.thm/lfi.php?page=/etc/passwd

	Vulnerable code: $local_file = $_REQUEST["page"];

	
	LFI using Directory traversal
		-> Directory traversal or Path traversal is an HTTP attack which allows attackers to access restricted directories and execute commands outside of the web server's root diectory or other paths.

		Example:
			-> http://vhost.thm/lfi.php?page=../../../../etc/passwd

		Vulnerable code: $local_file = "html/".$_REQUEST["page"];

	
	Reaching RCE using LFI and log poisoning

		What is Log poisoning?
			-> Log Poisoning is a common technique used to gain a reverse shell from a LFI vulnerability. To make it work an attacker attempts to inject malicious input to the server log.
			Note: In order for this to happen, the directory should have read and execute permissions.

		-> Try to read /var/log/apache2/access.log
		-> Intercept the request to this page in burp and inject php code in User agent field.
			User-Agent: Mozilla/5.0 <?php system($_GET['lfi']); ?> Firefox/70.0
			->This php command will allow us to execute system commands by parsing the input to a GET parameter called lfi.
		-> Now you can upload an php reverse shell and through vulnerable lfi parameter execute the php file and you 	will get the shell back.

	Important cheat sheets:
		https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/File%20Inclusion
		https://highon.coffee/blog/lfi-cheat-sheet/



RFI (Remote File Inclusion)
	

