Manual Discovery:
	1. /robots.txt
	2. Favicon
		-> A small icon displayed in the browser's address bar or tab used for branding.
		-> https://wiki.owasp.org/index.php/OWASP_favicon_database
		-> Search for favicon's location in the source code, get its md5sum and then lookup for the framework in the above site.
	3. /sitemap.xml
	4. Look for important information in the HTTP headers in the server's response.
	5. Determining framework stack from the above information, page source code (comments, copyright, credits)

OSINT
	1. Google Hacking/Dorking
		-> Filters
			1. site:tryhackme.com
			2. inurl:admin
			3. filetype:pdf
			4. intitle:admin
	2. Wappalyzer - Mozilla extension - identifies website technologies.
	3. Wayback machine - https://archive.org/web/
		-> historical archive of websites which dates back to 90s.
	4. Github - use github's search feature to look for company names or websites names to try and locate		repositories belonging to you target.
	5. S3 buckets - S3 Buckets are a storage service provided by Amazon AWS, allowing people to save filesand 	even static website content in the cloud accessible over HTTP and HTTPS
		-> The owner of the files can set access permissions to either make files public, private and even writable. Sometimes these access permissions are incorrectly set and inadvertently allow access to files that shouldn't be available to the public.
		-> The format of the S3 buckets is http(s)://{name}.s3.amazonaws.com where {name} is decided by the owner, such as tryhackme-assets.s3.amazonaws.com. 
		-> S3 buckets can be discovered in many ways, such as finding the URLs in the website's page source, GitHub repositories, or even automating the process. 
		-> One common automation method is by using the company name followed by common terms such as {name}-assets, {name}-www, {name}-public, {name}-private, etc.

Automated Discovery
	-> Using tools like ffuf, dirb, gobuster.
	
